apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-server
  namespace: {{ .Release.Namespace }}
data:
  server.conf: |
    server {
      bind_address = "0.0.0.0"
      bind_port = "8081"
      registration_uds_path = "/tmp/spire-registration.sock"
      trust_domain = "{{ .Values.trustedDomain }}"

      {{- if .Values.federation.enabled }}
      federation {
          bundle_endpoint {
              address = "{{ .Values.federation.bundle_endpoint.address }}"
              port = "{{ .Values.federation.bundle_endpoint.port }}"
              acme {
                  domain_name = "{{ .Values.federation.service.hostname }}"
                  email = "{{ .Values.federation.service.admin_email }}"
                  tos_accepted = true
              }
          }

          {{- range .Values.federation.federates_with }}
          federates_with "{{ .trust_domain }}" {
              bundle_endpoint {
                  address = "{{ .address }}"
                  port = {{ .port }}
              }
          }
          {{- end }}
      }
      {{- end }}

      data_dir = "/run/spire/data"
      log_level = "DEBUG"
      #AWS requires the use of RSA.  EC cryptography is not supported
      ca_key_type = "rsa-2048"

      default_svid_ttl = "1h"
      ca_subject = {
        country = ["US"],
        organization = ["SPIFFE"],
        common_name = "",
      }
    }

    telemetry {
      DogStatsd = [
        { address = "${DD_AGENT_HOST}:8125" }
      ]
    }

    plugins {
      DataStore "sql" {
        plugin_data {
          database_type = "sqlite3"
          connection_string = "/run/spire/data/datastore.sqlite3"
        }
      }

      NodeAttestor "k8s_sat" {
        plugin_data {
          clusters = {
            # NOTE: Change this to your cluster name
            "{{ .Values.clusterName }}" = {
              use_token_review_api_validation = true
              service_account_whitelist = ["{{ .Release.Namespace }}:spire-agent"]
            }
          }
        }
      }

      NodeResolver "noop" {
        plugin_data {}
      }

      KeyManager "disk" {
        plugin_data {
          keys_path = "/run/spire/data/keys.json"
        }
      }

      Notifier "k8sbundle" {
        plugin_data {
          namespace = "{{ .Release.Namespace }}"
        }
      }
    }
